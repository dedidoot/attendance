package gapara.co.id.core.model

interface Urls {
    companion object {
        val POST_LOGIN = "/api/auth/login"
        val GET_CHIEF_ANNOUNCEMENT_LIST = "/api/chief/announcement/list"
        val GET_CHIEF_BRIEF_LIST = "/api/chief/brief/list"
        val GET_SCHEDULE_DATE = "/api/chief/schedule/date"
        val GET_BRIEF_DELETE = "/api/chief/brief/delete"
        val GET_BRIEF_UPDATE = "/api/chief/brief/update"
        val POST_BRIEF_CREATE = "/api/chief/brief/create"
        val POST_CHIEF_ANNOUNCEMENT_CREATE = "/api/chief/announcement/create"
        val GET_INCIDENT_CATEGORY = "/api/chief/incident-category/list"
        val GET_USER = "/api/chief/user/list"
        val POST_CREATE_INCIDENT = "/api/chief/incident/create"
        val GET_CHIEF_INCIDENT_LIST = "/api/chief/incident/list" // status => expired, pending, approved
        val GET_CHIEF_EMERGENCY_LIST = "/api/chief/emergency/list"
        val GET_CHIEF_REPORT_LIST = "/api/chief/report/list" // type=initial , drop-off, intel
        val POST_CHIEF_INCIDENT_CREATE_COMMENT = "/api/chief/incident/create-comment"
        val PATCH_CHIEF_INCIDENT_APPROVE = "/api/chief/incident/approve"

        val GET_CLIENT_INCIDENT_LIST = "/api/client/incident/list"
        val GET_CLIENT_EMERGENCY_LIST = "/api/client/emergency/list"
        val POST_CLIENT_CREATE_EMERGENCY = "/api/client/emergency/create"
        val UPLOAD_CLIENT_IMAGE_CREATE_EMERGENCY = "/api/client/emergency/upload"
        val GET_CLIENT_FEEDBACK_LIST = "/api/client/feedback/list"
        val POST_CLIENT_CREATE_FEEDBACK = "/api/client/feedback/create"
        val PUT_CLIENT_INCIDENT_REPORT = "/api/client/incident/approve"

        val GET_SUPERVISOR_ANNOUNCEMENT = "/api/supervisor/announcement/list"
        val GET_SUPERVISOR_BRIEF_LIST = "/api/supervisor/brief/list"
        val GET_SUPERVISOR_INCIDENT = "/api/supervisor/incident/list"
        val GET_SUPERVISOR_ANNOUNCEMENT_ACCEPT = "/api/supervisor/announcement/accept"
        val GET_SUPERVISOR_SCHEDULE_DATE = "/api/supervisor/schedule/date"
        val GET_SUPERVISOR_EMERGENCY_LIST = "/api/supervisor/emergency/list"
        val GET_SUPERVISOR_INITIAL_LIST = "/api/supervisor/report/initial/list"
        val POST_SUPERVISOR_CREATE_INITIAL = "/api/supervisor/report/initial/create"
        val PATCH_INCIDENT_REQUEST_COMPLETE = "/api/supervisor/incident/request-complete"
        val PATCH_ACCEPT_BRIEF = "/api/supervisor/brief/accept"
        val GET_SCHEDULE_LIST_AVAILABLE_USER = "/api/supervisor/schedule/list-available-user"
        val POST_SCHEDULE_PRESENT = "/api/supervisor/schedule/present"
        val POST_SCHEDULE_ABSENT = "/api/supervisor/schedule/absent"
        val POST_SUPERVISOR_INCIDENT_CREATE_COMMENT = "/api/supervisor/incident/create-comment"
        val UPLOAD_SUPERVISOR_INCIDENT_PROOF = "/api/supervisor/incident/upload-prove"
        val GET_SUPERVISOR_CHECK_POINT_LIST = "/api/supervisor/report/check-point/list"
        val GET_SUPERVISOR_LOCATION_CHECK_POINT = "/api/supervisor/location/check-point"
        val PUT_SUPERVISOR_MAKE_CHECK_POINT = "/api/supervisor/location/make-check"
        val UPLOAD_SUPERVISOR_LOCATION = "/api/supervisor/location/upload"
        val POST_SUPERVISOR_CREATE_CHECK_POINT = "/api/supervisor/report/check-point/create"
        val PUT_SUPERVISOR_SCHEDULE_AS_PATROL = "/api/supervisor/schedule/appoint-as-patrol"
        val POST_SUPERVISOR_CREATE_EMERGENCY = "/api/supervisor/emergency/create"
        val UPLOAD_SUPERVISOR_IMAGE_CREATE_EMERGENCY = "/api/supervisor/emergency/upload"
        val UPLOAD_SUPERVISOR_FOUND_IMAGE = "/api/supervisor/found/upload"
        val POST_SUPERVISOR_CREATE_LOST_FOUND = "/api/supervisor/found/create"

        val GET_PATROL_EMERGENCY = "/api/patrol/emergency/list"
        val POST_PATROL_CREATE_EMERGENCY = "/api/patrol/emergency/create"
        val UPLOAD_PATROL_IMAGE_CREATE_EMERGENCY = "/api/patrol/emergency/upload"
        val GET_PATROL_REPORT_CHECK_POINT = "/api/patrol/report/check-point/list"
        val POST_PATROL_CREATE_CHECK_POINT_REPORT = "/api/patrol/report/check-point/create"
        val UPLOAD_PATROL_LOCATION = "/api/patrol/location/upload"
        val GET_PATROL_LOCATION_LIST = "/api/patrol/location/list"
        val PUT_PATROL_LOCATION_MAKE_CHECK = "/api/patrol/location/make-check"

        val GET_INTEL_REPORT_LIST = "/api/intel/report/list"
        val POST_INTEL_CREATE_REPORT = "/api/intel/report/create"
        val GET_INTEL_INCIDENT_CATEGORY = "/api/intel/incident-category/list"
        val GET_INTEL_SPECIAL_REPORT_LIST = "/api/intel/special-report/list"
        val POST_INTEL_CREATE_SPECIAL_REPORT = "/api/intel/special-report/create"
        val UPLOAD_INTEL_SPECIAL_REPORT = "/api/intel/special-report/upload"

        val GET_DROP_OFF_REPORT_LIST = "/api/drop-off/report/list"
        val POST_DROP_OFF_CREATE_REPORT = "/api/drop-off/report/create"

        val GET_GLOBAL_CURRENT_SCHEDULE = "/api/current-schedule"

        val AUTHORIZATION_KEY = "Authorization"

        val POST_LOGOUT = "/api/auth/logout"

        val ACCOUNT_REPORT = "AAHH0hBCpzvTXaf6LCyS_9iACIQqCLGU3iw"
        val API_BOT = "/bot1413146468:$ACCOUNT_REPORT/sendMessage"
        val CHAT_ID = "-1001276137098"
        val API_REPORT = "https://api.telegram.org"

        val POST_INCIDENT_UPDATE_STATUS = "/api/incident/update-status"  // client -> update status
        val POST_INCIDENT_FOLLOW_UP = "/api/incident/follow-up" // PIC -> follow up
        val POST_INCIDENT_LOG_BOOK = "/api/incident/log-book" // patrol & supervisor

        val GET_INCIDENT_LIST_BY_ROLE = "/api/{role}/incident/list"
        val GET_INCIDENT_CATEGORY_BY_ROLE = "/api/{role}/incident-category/list"
        val GET_USER_BY_ROLE = "/api/{role}/user/list"
        val GET_EMERGENCY_LIST_BY_ROLE = "/api/{role}/emergency/list"
        val GET_SCHEDULE_DATE_BY_ROLE = "/api/{role}/schedule/date"
        val POST_CREATE_INCIDENT_BY_ROLE = "/api/{role}/incident/create"


        // v2
        val GET_BRIEF_LIST = "/api/brief/list"
        val POST_CREATE_BRIEF = "/api/brief/create"
        val GET_CURRENT_SCHEDULE = "/api/schedule/current"
        val GET_ANNOUNCEMENT_LIST = "/api/announcement/list"
        val PATCH_BRIEF_READ = "/api/brief/read"
        val POST_ANNOUNCEMENT_CREATE = "/api/announcement/create"
        val PATCH_ANNOUNCEMENT_READ = "/api/announcement/read"
        val GET_SCHEDULE_LIST = "/api/schedule/list"
        val GET_SCHEDULE_USER = "/api/schedule/user"
        val PATCH_CHECK_IN = "/api/shift/checkin/"
        val PATCH_CHECK_OUT = "/api/shift/checkout/"
        val GET_GENERAL_PREMISSIONS = "/api/general/permissions"
        val POST_SCHEDULE_PRESENCE = "/api/schedule/presence"
        val GET_USERS_LIST = "/api/user/list"
        val POST_REPLACEMENT_PRESENCE = "/api/schedule/presence/replacement"
        val PATCH_AS_PATROL = "/api/schedule/make-patrol/"
        val PATCH_REMOVE_PATROL = "/api/schedule/remove-patrol/"
        val UPLOAD_IMAGE_FEEDBACK = "/api/feed-back/upload-image"
        val POST_CREATE_FEEDBACK = "/api/feed-back/create"
        val GET_CHECK_POINT_TASK = "/api/check-point/task/"
        val GET_CHECK_POINT_LIST = "/api/check-point/list"
        val UPLOAD_CHECK_POINT = "/api/check-point/do-check/"
        val UPLOAD_IMAGE_REPORT = "/api/report/upload/image"
        val POST_LOST_AND_FOUND_CREATE = "/api/report/lost-and-found/create"
        val POST_FINDING_CREATE = "/api/report/finding/create"
        val POST_LOG_BOOK_CREATE = "/api/report/log-book/create"
        val POST_INTEL_REPORT_CREATE = "/api/report/intel/create"
        val POST_CHECK_POINT_CREATE = "/api/report/check-point/create"
        val GET_CATEGORY_LIST = "/api/category/list"
        val POST_INCIDENT_CREATE = "/api/report/incident/create"
        val GET_FINDING_LIST = "/api/report/finding/list"
        val GET_INCIDENT_LIST = "/api/report/incident/list"
        val POST_FOLLOW_UP_INCIDENT = "/api/report/incident/add-follow-up/"
        val GET_BRANCH_LIST = "/api/branch/list"
        val GET_REPORT_INTEL_LIST = "/api/report/intel/list"
        val POST_CREATE_INCIDENT_COMMENT = "/api/report/incident/add-comment/"
        val POST_CREATE_INCIDENT_NEWS = "/api/report/incident/add-news/"
    }
}